/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package swingguide.panels.jlabel;

import swingguide.helpers.ComponentPanel;
import swingguide.helpers.ComponentTemplate;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.JLabel;
import javax.swing.border.LineBorder;

/**
 *
 * @author Light
 */
public class JLabelPanel_04_OverallLook extends ComponentPanel {

    /**
     * Creates new form NewJPanel3
     */
    public JLabelPanel_04_OverallLook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();

        jCheckBox4.setText("Change Size");

        jCheckBox9.setText("Change Text and Icon Gap");

        jCheckBox8.setText("Set Border");

        jCheckBox7.setText("Change Background Color");

        jCheckBox6.setText("Change Foreground Color");

        jCheckBox5.setText("Change Font and Style");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox6)
                    .addComponent(jCheckBox7)
                    .addComponent(jCheckBox8)
                    .addComponent(jCheckBox9))
                .addContainerGap(239, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jCheckBox4)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox5)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox7)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox8)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox9)
                .addContainerGap(80, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getTitle() {
        return "Overall Look";
    }
    
    @Override
    public void setup(Component primaryComponent, ComponentTemplate componentTemplate) {
        
        JLabel jLabel1 = (JLabel)primaryComponent;

        //Change Size
        jCheckBox4.setAction(new AbstractAction(jCheckBox4.getText()) {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (jCheckBox4.isSelected()) {
                    Dimension dim = new Dimension(300, 200);
                    jLabel1.setPreferredSize(dim);
                    jLabel1.setMinimumSize(dim);
                    jLabel1.getParent().revalidate();
                } else {
                    jLabel1.setPreferredSize(null);
                    jLabel1.setMinimumSize(null);
                    jLabel1.getParent().revalidate();
                }
                componentTemplate.setCodeTextArea(
                        "/*  Change Size  */\n\n"
                        + "Dimension dim = new Dimension(300,200);\n"
                        + "jLabel1.setPreferredSize(dim);\n"
                        + "jLabel1.setMinimumSize(dim);\n"
                        + "jLabel1.getParent().revalidate();\n"
                        + "\n"
                        + "\n"
                        + "/*\n"
                        + "Reset:\n"
                        + "    jLabel1.setPreferredSize(null);\n"
                        + "    jLabel1.setMinimumSize(null);\n"
                        + "    jLabel1.getParent().revalidate();\n"
                        + "\n"
                        + "Note:\n"
                        + "    The specifics of which \"size\" method to use depends on the layout of the Parent\n"
                        + "*/\n"
                );
            }
        });

        //Change Font
        jCheckBox5.setAction(new AbstractAction(jCheckBox5.getText()) {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (jCheckBox5.isSelected()) {
                    jLabel1.setFont(new Font("Courier New", Font.BOLD | Font.ITALIC, 23));
                } else {
                    jLabel1.setFont(null);
                }
                componentTemplate.setCodeTextArea(
                        "/*  Change Font  */\n\n"
                        + "jLabel1.setFont(new Font(\"Courier New\", Font.BOLD | Font.ITALIC, 23));\n"
                        + "\n"
                        + "\n"
                        + "/*\n"
                        + "Reset:\n"
                        + "    jLabel1.setFont(null);\n"
                        + "*/\n"
                );
            }
        });

        //Change Foreground Color
        jCheckBox6.setAction(new AbstractAction(jCheckBox6.getText()) {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (jCheckBox6.isSelected()) {
                    jLabel1.setForeground(Color.GREEN);
                } else {
                    jLabel1.setForeground(null);
                }
                componentTemplate.setCodeTextArea(
                        "/*  Change Foreground Color  */\n\n"
                        + "jLabel1.setForeground(Color.GREEN);\n"
                        + "\n"
                        + "\n"
                        + "/*\n"
                        + "Reset:\n"
                        + "    jLabel1.setForeground(null);\n"
                        + "*/\n"
                );
            }
        });

        //Change Background Color
        jCheckBox7.setAction(new AbstractAction(jCheckBox7.getText()) {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (jCheckBox7.isSelected()) {
                    jLabel1.setOpaque(true);
                    jLabel1.setBackground(Color.RED);
                } else {
                    jLabel1.setOpaque(false);
                    jLabel1.setBackground(null);
                }
                componentTemplate.setCodeTextArea(
                        "/*  Change Background Color  */\n\n"
                        + "jLabel1.setOpaque(true);\n"
                        + "jLabel1.setBackground(Color.RED);\n"
                        + "\n"
                        + "\n"
                        + "/*\n"
                        + "Reset:\n"
                        + "    jLabel1.setBackground(null);\n"
                        + "*/\n"
                );
            }
        });

        //Set Border
        jCheckBox8.setAction(new AbstractAction(jCheckBox8.getText()) {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (jCheckBox8.isSelected()) {
                    jLabel1.setBorder(new LineBorder(Color.MAGENTA, 4));
                } else {
                    jLabel1.setBorder(null);
                }
                componentTemplate.setCodeTextArea(
                        "/*  Set Border  */\n\n"
                        + "jLabel1.setBorder(new LineBorder(Color.MAGENTA, 4));\n"
                        + "\n"
                        + "\n"
                        + "/*\n"
                        + "Reset:\n"
                        + "    jLabel1.setBorder(null);\n"
                        + "*/\n"
                );
            }
        });

        //Change Text and Icon Gap
        jCheckBox9.setAction(new AbstractAction(jCheckBox9.getText()) {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (jCheckBox9.isSelected()) {
                    jLabel1.setIconTextGap(40);
                } else {
                    jLabel1.setIconTextGap(4);
                }
                componentTemplate.setCodeTextArea(
                        "/*  Change Text and Icon Gap  */\n\n"
                        + "jLabel1.setIconTextGap(40);\n"
                        + "\n"
                        + "\n"
                        + "/*\n"
                        + "Reset:\n"
                        + "    jLabel1.setIconTextGap(4);\n"
                        + "*/\n"
                );
            }
        });




    }
}
