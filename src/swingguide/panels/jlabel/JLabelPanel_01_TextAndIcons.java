/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package swingguide.panels.jlabel;

import swingguide.helpers.ComponentPanel;
import swingguide.helpers.ComponentTemplate;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author Light
 */
public class JLabelPanel_01_TextAndIcons extends ComponentPanel {

    /**
     * Creates new form NewJPanel
     */
    public JLabelPanel_01_TextAndIcons() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton8 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jCheckBox2.setText("Set Disabled Icon");

        jCheckBox1.setText("Set Icon");

        jButton8.setText("Set Text (HTML)");

        jButton1.setText("Set Text");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox2)
                    .addComponent(jButton1)
                    .addComponent(jButton8)
                    .addComponent(jCheckBox1))
                .addGap(0, 279, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addContainerGap(171, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getTitle() {
        return "Text and Icons";
    }

    @Override
    public void setup(Component primaryComponent, ComponentTemplate componentTemplate) {

        JLabel jLabel1 = (JLabel) primaryComponent;

        //Set Text (Plain)
        jButton1.setAction(new AbstractAction(jButton1.getText()) {
            @Override
            public void actionPerformed(ActionEvent e) {
                jLabel1.setText("The New Text");
                componentTemplate.setCodeTextArea(
                        "/*  Set Text (Plain)  */\n\n"
                        + "jLabel1.setText(\"The New Text\");\n"
                        + "\n"
                        + "\n"
                        + "/*\n"
                        + "Reset:\n"
                        + "    jLabel1.setText(\"\");\n"
                        + "*/\n"
                );
            }
        });

        //Set Text (HTML)
        jButton8.setAction(new AbstractAction(jButton8.getText()) {
            @Override
            public void actionPerformed(ActionEvent e) {
                jLabel1.setText("<html><font bgcolor=#80ff80 color=#8080ff>The</font>&nbsp;&nbsp;HTML<br><b>text</b></html>");
                componentTemplate.setCodeTextArea(
                        "/*  Set Text (HTML)  */\n\n"
                        + "jLabel1.setText(\"<html><font bgcolor=#80ff80 color=#8080ff>The</font>&nbsp;&nbsp;HTML<br><b>text</b></html>\");\n"
                        + "\n"
                        + "\n"
                        + "/*\n"
                        + "Reset:\n"
                        + "    jLabel1.setText(\"\");\n"
                        + "\n"
                        + "Notes:\n"
                        + "    The available HTML tags and attributes, for use in Swing, are listed in javax.swing.text.html.HTML\n"
                        + "*/\n"
                );
            }
        });

        //Set Icon
        jCheckBox1.setAction(new AbstractAction(jCheckBox1.getText()) {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (jCheckBox1.isSelected()) {
                    ImageIcon icon = new ImageIcon(getClass().getResource("/images/icon_primary.png"));
                    jLabel1.setIcon(icon);
                } else {
                    jLabel1.setIcon(null);
                }
                componentTemplate.setCodeTextArea(
                        "/*  Set Icon  */\n\n"
                        + "ImageIcon icon = new ImageIcon(getClass().getResource(\"/icon.png\"));\n"
                        + "jLabel1.setIcon(icon);\n"
                        + "\n"
                        + "\n"
                        + "/*\n"
                        + "Reset:\n"
                        + "    jLabel1.setIcon(null);\n"
                        + "\n"
                        + "Notes:\n"
                        + "    The code above works for .jpg, .gif, or .png files, for .bmp or .tif use:\n"
                        + "        try {\n"
                        + "            ImageIcon icon = new ImageIcon(ImageIO.read(getClass().getResource(\"/icon.bmp\")));\n"
                        + "            jLabel1.setIcon(icon);\n"
                        + "        } catch (IOException ex) {\n"
                        + "        }\n"
                        + "\n"
                        + "    The resource path starting with a / lets the file be found at:\n"
                        + "        \"src/main/resources/\" for Maven\n"
                        + "        \"src/\" for Ant\n"
                        + "\n"
                        + "    To load a local image file:\n"
                        + "        icon = new ImageIcon(new URL(\"file:c:\\\\users\\\\myaccount\\\\pictures\\\\icon.jpg\"));\n"
                        + "        jLabel1.setIcon(icon);\n"
                        + "*/\n"
                );
            }
        });

        //Set Disabled Icon
        jCheckBox2.setAction(new AbstractAction(jCheckBox2.getText()) {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (jCheckBox2.isSelected()) {
                    ImageIcon icon = new ImageIcon(getClass().getResource("/images/icon_disable.png"));
                    jLabel1.setDisabledIcon(icon);
                } else {
                    jLabel1.setDisabledIcon(null);
                }
                componentTemplate.setCodeTextArea(
                        "/*  Set Disabled Icon  */\n\n"
                        + "ImageIcon icon = new ImageIcon(getClass().getResource(\"/disable_icon.png\")); //for .jpg, .gif, or .png\n"
                        + "jLabel1.setDisabledIcon(icon);\n"
                        + "\n"
                        + "\n"
                        + "/*\n"
                        + "Reset:\n"
                        + "    jLabel1.setDisabledIcon(null);\n"
                        + "\n"
                        + "Notes:\n"
                        + "    The code above works for .jpg, .gif, or .png files, for .bmp or .tif use:\n"
                        + "        try {\n"
                        + "            ImageIcon icon = new ImageIcon(ImageIO.read(getClass().getResource(\"/icon.bmp\")));\n"
                        + "            jLabel1.setDisabledIcon(icon);\n"
                        + "        } catch (IOException ex) {\n"
                        + "        }\n"
                        + "\n"
                        + "    The resource path starting with a / lets the file be found at:\n"
                        + "        \"src/main/resources/\" for Maven\n"
                        + "        \"src/\" for Ant\n"
                        + "\n"
                        + "    To load a local image file:\n"
                        + "        icon = new ImageIcon(new URL(\"file:c:\\\\users\\\\myaccount\\\\pictures\\\\icon.jpg\"));\n"
                        + "        jLabel1.setDisabledIcon(icon);\n"
                        + "*/\n"
                );
            }
        });
    }
}
